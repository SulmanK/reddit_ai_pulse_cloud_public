name: Upload Secrets to GCS

on:
  workflow_dispatch:  # Manual trigger
  repository_dispatch:
    types: [secrets_updated]  # Custom event type
  push:
    paths:
      - '.github/workflows/upload-secrets.yml'

jobs:
  upload-secrets:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Create secrets directory'
      run: mkdir -p secrets

    - name: 'Create .env file'
      run: |
        cat << EOF > secrets/.env
        # Docker Registry
        DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}

        # GCP Project Configuration
        GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
        GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }}
        GCP_REGION=${{ secrets.GCP_REGION }}
        GCP_ZONE=${{ secrets.GCP_ZONE }}

        # Service Account & Authentication
        GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/credentials/service-account.json
        SA_EMAIL=${{ secrets.SA_EMAIL }}

        # VM Configuration
        VM_INSTANCE_NAME=${{ secrets.VM_INSTANCE_NAME }}
        VM_MACHINE_TYPE=${{ secrets.VM_MACHINE_TYPE }}

        # Network Configuration
        NETWORK_NAME=${{ secrets.NETWORK_NAME }}
        SUBNET_NAME=${{ secrets.SUBNET_NAME }}
        SUBNET_CIDR=${{ secrets.SUBNET_CIDR }}

        # Email Configuration
        ALERT_EMAIL=${{ secrets.ALERT_EMAIL }}
        ALERT_EMAIL_PASSWORD=${{ secrets.ALERT_EMAIL_PASSWORD }}

        # BigQuery Configuration
        BIGQUERY_DATASET_RAW=${{ secrets.BIGQUERY_DATASET_RAW }}
        BIGQUERY_DATASET_PROCESSED=${{ secrets.BIGQUERY_DATASET_PROCESSED }}

        # Reddit API Configuration
        REDDIT_CLIENT_ID=${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET=${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USERNAME=${{ secrets.REDDIT_USERNAME }}
        REDDIT_PASSWORD=${{ secrets.REDDIT_PASSWORD }}
        REDDIT_USER_AGENT=${{ secrets.REDDIT_USER_AGENT }}

        # Gemini API Key
        GOOGLE_GEMINI_API_KEY=${{ secrets.GOOGLE_GEMINI_API_KEY }}

        # GitHub Configuration
        GH_PAT=${{ secrets.GH_PAT }}
        GH_OWNER=${{ secrets.GH_OWNER }}
        GH_REPO=${{ secrets.GH_REPO }}
        GH_WEBSITE_REPO=${{ secrets.GH_WEBSITE_REPO }}
        AUTO_COMMIT=${{ secrets.AUTO_COMMIT }}

        # Grafana credentials
        GF_SECURITY_ADMIN_USER=${{ secrets.GF_SECURITY_ADMIN_USER }}
        GF_SECURITY_ADMIN_PASSWORD=${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}

        # Airflow PostgreSQL credentials
        AIRFLOW_DB_USER=${{ secrets.AIRFLOW_DB_USER }}
        AIRFLOW_DB_PASSWORD=${{ secrets.AIRFLOW_DB_PASSWORD }}
        AIRFLOW_DB_NAME=${{ secrets.AIRFLOW_DB_NAME }}

        # VM Function URLs
        STOP_VM_FUNCTION_URL=${{ secrets.STOP_VM_FUNCTION_URL }}
        START_VM_FUNCTION_URL=${{ secrets.START_VM_FUNCTION_URL }}

        # Airflow configuration
        AIRFLOW_UID=50000
        AIRFLOW_GID=0
        EOF

    - name: 'Create service account key file'
      run: |
        echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > secrets/service-account.json

    - name: 'Upload secrets to GCS'
      run: |
        gsutil cp secrets/.env gs://${{ secrets.GCS_BUCKET_NAME }}/secrets/.env
        gsutil cp secrets/service-account.json gs://${{ secrets.GCS_BUCKET_NAME }}/secrets/service-account.json 